import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'utils/auth_storage.dart';
import 'community_screen.dart';

class CommunityWriteScreen extends StatefulWidget {
  const CommunityWriteScreen({super.key});

  @override
  State<CommunityWriteScreen> createState() => _CommunityWriteScreenState();
}

class _CommunityWriteScreenState extends State<CommunityWriteScreen> {
  final TextEditingController _titleController = TextEditingController();
  final TextEditingController _contentController = TextEditingController();
  bool isLoading = false;
  String? token;
  int? userId;

  @override
  void initState() {
    super.initState();
    _initialize();
  }

  Future<void> _initialize() async {
    await _loadAuthInfo();
  }

  Future<void> _loadAuthInfo() async {
    token = await getJwtToken();
    userId = await getUserId();
    if (mounted) {
      setState(() {});
    }
  }

  @override
  void dispose() {
    _titleController.dispose();
    _contentController.dispose();
    super.dispose();
  }

  Future<void> _submitPost() async {
    if (_titleController.text.trim().isEmpty || _contentController.text.trim().isEmpty) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Ï†úÎ™©Í≥º ÎÇ¥Ïö©ÏùÑ Î™®Îëê ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.')),
      );
      return;
    }

    setState(() {
      isLoading = true;
    });

    try {
      if (token == null) {
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(content: Text('Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌï©ÎãàÎã§.')),
        );
        return;
      }
      
      final requestBody = {
        'postId': 0,
        'userId': userId ?? 0,
        'title': _titleController.text.trim(),
        'content': _contentController.text.trim(),
        'image1': 'string',
        'image2': 'string',
        'image3': 'string',
        'image4': 'string',
        'createdAt': DateTime.now().toIso8601String(),
        'updatedAt': DateTime.now().toIso8601String(),
        'likeCount': 0,
      };

      print('üîç Í≤åÏãúÎ¨º ÏûëÏÑ± ÏãúÏûë...');
      print('üîç ÌÜ†ÌÅ∞: ${token != null ? "ÏûàÏùå" : "ÏóÜÏùå"}');
      print('üîç ÏÇ¨Ïö©Ïûê ID: $userId');
      print('üì§ ÏöîÏ≤≠ Î∞îÎîî: ${json.encode(requestBody)}');

      final response = await http.post(
        Uri.parse('http://43.203.23.173:8080/post/add'),
        headers: {
          'accept': '*/*',
          'Content-Type': 'application/json',
          'Authorization': 'Bearer $token',
        },
        body: json.encode(requestBody),
      );

      print('üìä ÏùëÎãµ ÏÉÅÌÉú ÏΩîÎìú: ${response.statusCode}');
      print('üìä ÏùëÎãµ Î∞îÎîî: ${response.body}');

      if (response.statusCode == 200 || response.statusCode == 201) {
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(content: Text('Í≤åÏãúÎ¨ºÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏûëÏÑ±ÎêòÏóàÏäµÎãàÎã§.')),
        );
        // ÏÑ±Í≥µ Í≤∞Í≥ºÏôÄ Ìï®Íªò Ïù¥Ï†Ñ ÌôîÎ©¥ÏúºÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞
        Navigator.pop(context, true);
      } else {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('Í≤åÏãúÎ¨º ÏûëÏÑ±Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§. (${response.statusCode})')),
        );
      }
    } catch (e) {
      print('‚ùå Í≤åÏãúÎ¨º ÏûëÏÑ± ÏóêÎü¨: $e');
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§: $e')),
      );
    } finally {
      setState(() {
        isLoading = false;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    final screenWidth = MediaQuery.of(context).size.width;
    final screenHeight = MediaQuery.of(context).size.height;

    return Scaffold(
      backgroundColor: const Color(0xFFFFFEFD),
      resizeToAvoidBottomInset: true,
      body: SafeArea(
        child: GestureDetector(
          onTap: () {
            // ÌÇ§Î≥¥Îìú Ïà®Í∏∞Í∏∞
            FocusScope.of(context).unfocus();
          },
          child: Stack(
            children: [
              // X Î≤ÑÌäº
              Positioned(
                top: screenHeight * (23 / 844),
                left: screenWidth * (24 / 390),
                child: IconButton(
                  icon: const Icon(Icons.close, color: Colors.black),
                  onPressed: () => Navigator.pop(context),
                ),
              ),

              // Í∏ÄÏì∞Í∏∞ ÌÖçÏä§Ìä∏
              Positioned(
                top: screenHeight * (31 / 844),
                left: 0,
                right: 0,
                child: Center(
                  child: Text(
                    'Í∏ÄÏì∞Í∏∞',
                    style: TextStyle(
                      fontSize: screenWidth * (20 / 390),
                      fontWeight: FontWeight.bold,
                      fontFamily: 'Pretendard',
                    ),
                  ),
                ),
              ),

              // ÏôÑÎ£å Î≤ÑÌäº
              Positioned(
                top: screenHeight * (31 / 844),
                right: screenWidth * (24 / 390),
                child: GestureDetector(
                  onTap: isLoading ? null : _submitPost,
                  child: Container(
                    width: screenWidth * (52 / 390),
                    padding: EdgeInsets.symmetric(
                      horizontal: screenWidth * (12 / 390),
                      vertical: screenHeight * (4 / 844),
                    ),
                    decoration: BoxDecoration(
                      color: const Color(0xFF837670),
                      borderRadius: BorderRadius.circular(screenWidth * (23.226 / 390)),
                      boxShadow: [
                        BoxShadow(
                          color: const Color.fromRGBO(177, 177, 177, 0.3),
                          blurRadius: screenWidth * (3.097 / 390),
                          spreadRadius: screenWidth * (0.774 / 390),
                        ),
                      ],
                    ),
                    child: Center(
                      child: isLoading
                          ? SizedBox(
                              width: screenWidth * (16 / 390),
                              height: screenWidth * (16 / 390),
                              child: const CircularProgressIndicator(
                                color: Colors.white,
                                strokeWidth: 2,
                              ),
                            )
                          : Text(
                              'ÏôÑÎ£å',
                              style: TextStyle(
                                fontSize: screenWidth * (16 / 390),
                                color: Colors.white,
                                fontWeight: FontWeight.w500,
                                fontFamily: 'Pretendard',
                              ),
                            ),
                    ),
                  ),
                ),
              ),

              // Î≥∏Î¨∏ ÏûÖÎ†• ÏòÅÏó≠
              Positioned(
                top: screenHeight * (87 / 844),
                left: screenWidth * (24 / 390),
                right: screenWidth * (24 / 390),
                child: SingleChildScrollView(
                  child: Column(
                    children: [
                      // Ï†úÎ™© ÏûÖÎ†•ÎûÄ
                      Container(
                        width: screenWidth * (342 / 390),
                        height: screenHeight * (48 / 844),
                        decoration: BoxDecoration(
                          color: const Color(0xFFFEF6F2),
                          borderRadius: BorderRadius.circular(20),
                        ),
                        child: TextField(
                          controller: _titleController,
                          style: TextStyle(
                            color: Colors.black,
                            fontSize: screenWidth * (20 / 390),
                            fontWeight: FontWeight.w600,
                            fontFamily: 'Pretendard',
                          ),
                          decoration: InputDecoration(
                            hintText: 'Ï†úÎ™©',
                            hintStyle: TextStyle(
                              color: const Color(0xFFB1B1B1),
                              fontSize: screenWidth * (20 / 390),
                              fontWeight: FontWeight.w600,
                              fontFamily: 'Pretendard',
                            ),
                            border: InputBorder.none,
                            contentPadding: EdgeInsets.symmetric(
                              horizontal: screenWidth * (20 / 390),
                            ),
                          ),
                        ),
                      ),
                      SizedBox(height: screenHeight * (8 / 844)),
                      // ÎÇ¥Ïö© ÏûÖÎ†•ÎûÄ
                      Container(
                        width: screenWidth * (342 / 390),
                        height: screenHeight * (456 / 844),
                        decoration: BoxDecoration(
                          color: Colors.white,
                          borderRadius: BorderRadius.circular(20),
                          border: Border.all(color: const Color(0xFFEBEBEB)),
                        ),
                        child: TextField(
                          controller: _contentController,
                          maxLines: null,
                          expands: true,
                          style: TextStyle(
                            color: Colors.black,
                            fontSize: screenWidth * (16 / 390),
                            fontFamily: 'Pretendard',
                          ),
                          decoration: InputDecoration(
                            hintText: 'ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî.',
                            hintStyle: TextStyle(
                              color: const Color(0xFFB1B1B1),
                              fontSize: screenWidth * (16 / 390),
                              fontFamily: 'Pretendard',
                            ),
                            border: InputBorder.none,
                            contentPadding: EdgeInsets.all(screenWidth * (20 / 390)),
                          ),
                        ),
                      ),
                      SizedBox(height: screenHeight * (20 / 844)),
                      // Ïª§ÎÆ§ÎãàÌã∞ Ïù¥Ïö© ÏàòÏπô
                      Align(
                        alignment: Alignment.centerLeft,
                        child: Padding(
                          padding: EdgeInsets.only(left: screenWidth * (16 / 390)),
                          child: Text(
                            'Ïª§ÎÆ§ÎãàÌã∞ Ïù¥Ïö© ÏàòÏπô\nÎπÑÏÜçÏñ¥ ÏÇ¨Ïö© Í∏àÏßÄ Îì±Îì±..',
                            style: TextStyle(
                              color: const Color(0xFF706B66),
                              fontSize: screenWidth * (12 / 390),
                              fontWeight: FontWeight.w400,
                              fontFamily: 'Pretendard',
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
